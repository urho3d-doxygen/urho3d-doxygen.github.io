# Данный workflow генерирует документацию Urho3D и публикует её на сайте

# Отображаемое имя workflow
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#name
name: "Генерация документации в 1_9_0_plus"

on:
  # Данный workflow запускается вручную
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#manual-events
  # Ручной запуск можно было бы симулировать из репозитория Urho3D, но нужно вписать туда токен
  # https://docs.github.com/en/rest/actions/workflows#create-a-workflow-dispatch-event
  workflow_dispatch:

# Глобальная переменная
# https://docs.github.com/en/actions/learn-github-actions/environment-variables
env:
  RESULT_DIR: 1_9_0_plus

jobs:
  # Идентификатор job
  # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_id
  Dokumentaciya:
    # Будет запущен на виртуальной машине с последней версией Ubuntu
    # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    runs-on: ubuntu-22.04

    # Отображаемое имя job 
    # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idname
    name: Генерация документации

    # Последовательность задач
    # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idsteps
    steps:

    - name: Устанавливаем софт # Отображаемое имя step
      run: |
        set -x # Отображаем выполняемые команды

        # Приложение Doxygen генерирует документацию
        #sudo apt-get install -y doxygen

        # В репозитории Ubuntu устаревшая версия 1.9.1. Качаем свою сборку
        mkdir $HOME/programs
        cd $HOME/programs
        wget -q -O tmp.zip https://github.com/rurho3d/doxygen-builder/raw/main/doxygen_linux64.zip && unzip tmp.zip && rm tmp.zip
        echo "$HOME/programs" >> $GITHUB_PATH

        # Для генерации ScriptAPI.dox и AngelScriptAPI.h нужно скомпилировать ScriptCompiler, а значит и движок.
        # Поэтому устанавливаем библиотеки, необходимые для компиляции движка
        sudo apt-get install freeglut3-dev

    - name: Скачиваем репозиторий движка

      # Дефолтная командная оболочка моментально прекращает работу, если при выполнении любой команды возникла ошибка.
      # Нам же нужна возможность обработки ошибок
      # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstepsrun
      shell: bash {0}

      run: |
        set -x # Отображаем выполняемые команды

        git config --global user.email "urho3d[bot]@users.noreply.github.com"
        git config --global user.name "urho3d[bot]"

        # Качаем репозиторий
        git clone https://github.com/urho3d/Urho3D urho3d_repo

        # Возвращаем состояние репозитория к определённой версии (29.11.2022)
        git -C urho3d_repo reset --hard f3217aecc88311b87c9746d65df4f7438170e9a1

    - name: Генерируем документацию
      run: |
        cmake urho3d_repo -B urho3d_build -D CMAKE_BUILD_TYPE=Debug # Генерируем проекты движка
        cmake --build urho3d_build --target doc # Компилируем проект doc

    - name: Публикуем документацию

      # Не пытаемся публиковать документацию, если action выполняется в форке
      # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idif
      # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context
      if: github.repository == 'urho3d-doxygen/urho3d-doxygen.github.io'

      shell: bash {0}

      run: |
        set -x # Отображаем выполняемые команды

        git clone https://github.com/${{github.repository}} this_repo # Качаем репозиторий

        rm -rf this_repo/$RESULT_DIR # Удаляем директорию, если существует
        mkdir this_repo/$RESULT_DIR
        cp -a urho3d_build/Docs/html/. this_repo/$RESULT_DIR # Копируем содержимое папки

        cd this_repo
        git add -A
        git commit -m "Обновление документации в $RESULT_DIR" || : # Создаём коммит и перехватываем ошибку, если в репозитории нет изменений
        git push https://.:${{github.token}}@github.com/${{github.repository}}
